Given a string, find the length of the longest substring without repeating characters

Python3 - O(n) Time complexity using a hash map (dictionary)

class Solution:
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        hash = dict()
        count = 0
        longest = 0
        
        for c in s:
            if c in hash:
                hash.clear()
                if count > longest:
                    longest = count
                count = 1
                hash[c] = 1
            else:
                hash[c] = 1
                count = count + 1

        return longest